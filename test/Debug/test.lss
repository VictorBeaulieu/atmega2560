
test.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000064  00800200  00000ab0  00000b44  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000ab0  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000208  00800264  00800264  00000ba8  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000ba8  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000bd8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 000000d8  00000000  00000000  00000c18  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001573  00000000  00000000  00000cf0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d7b  00000000  00000000  00002263  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000ac0  00000000  00000000  00002fde  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000002d8  00000000  00000000  00003aa0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000796  00000000  00000000  00003d78  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00001064  00000000  00000000  0000450e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 000000b8  00000000  00000000  00005572  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	71 c0       	rjmp	.+226    	; 0xe4 <__ctors_end>
   2:	00 00       	nop
   4:	8e c0       	rjmp	.+284    	; 0x122 <__bad_interrupt>
   6:	00 00       	nop
   8:	8c c0       	rjmp	.+280    	; 0x122 <__bad_interrupt>
   a:	00 00       	nop
   c:	8a c0       	rjmp	.+276    	; 0x122 <__bad_interrupt>
   e:	00 00       	nop
  10:	88 c0       	rjmp	.+272    	; 0x122 <__bad_interrupt>
  12:	00 00       	nop
  14:	86 c0       	rjmp	.+268    	; 0x122 <__bad_interrupt>
  16:	00 00       	nop
  18:	84 c0       	rjmp	.+264    	; 0x122 <__bad_interrupt>
  1a:	00 00       	nop
  1c:	82 c0       	rjmp	.+260    	; 0x122 <__bad_interrupt>
  1e:	00 00       	nop
  20:	80 c0       	rjmp	.+256    	; 0x122 <__bad_interrupt>
  22:	00 00       	nop
  24:	7e c0       	rjmp	.+252    	; 0x122 <__bad_interrupt>
  26:	00 00       	nop
  28:	7c c0       	rjmp	.+248    	; 0x122 <__bad_interrupt>
  2a:	00 00       	nop
  2c:	7a c0       	rjmp	.+244    	; 0x122 <__bad_interrupt>
  2e:	00 00       	nop
  30:	78 c0       	rjmp	.+240    	; 0x122 <__bad_interrupt>
  32:	00 00       	nop
  34:	76 c0       	rjmp	.+236    	; 0x122 <__bad_interrupt>
  36:	00 00       	nop
  38:	74 c0       	rjmp	.+232    	; 0x122 <__bad_interrupt>
  3a:	00 00       	nop
  3c:	72 c0       	rjmp	.+228    	; 0x122 <__bad_interrupt>
  3e:	00 00       	nop
  40:	70 c0       	rjmp	.+224    	; 0x122 <__bad_interrupt>
  42:	00 00       	nop
  44:	6e c0       	rjmp	.+220    	; 0x122 <__bad_interrupt>
  46:	00 00       	nop
  48:	6c c0       	rjmp	.+216    	; 0x122 <__bad_interrupt>
  4a:	00 00       	nop
  4c:	6a c0       	rjmp	.+212    	; 0x122 <__bad_interrupt>
  4e:	00 00       	nop
  50:	68 c0       	rjmp	.+208    	; 0x122 <__bad_interrupt>
  52:	00 00       	nop
  54:	66 c0       	rjmp	.+204    	; 0x122 <__bad_interrupt>
  56:	00 00       	nop
  58:	64 c0       	rjmp	.+200    	; 0x122 <__bad_interrupt>
  5a:	00 00       	nop
  5c:	62 c0       	rjmp	.+196    	; 0x122 <__bad_interrupt>
  5e:	00 00       	nop
  60:	60 c0       	rjmp	.+192    	; 0x122 <__bad_interrupt>
  62:	00 00       	nop
  64:	d6 c3       	rjmp	.+1964   	; 0x812 <__vector_25>
  66:	00 00       	nop
  68:	5c c0       	rjmp	.+184    	; 0x122 <__bad_interrupt>
  6a:	00 00       	nop
  6c:	5a c0       	rjmp	.+180    	; 0x122 <__bad_interrupt>
  6e:	00 00       	nop
  70:	58 c0       	rjmp	.+176    	; 0x122 <__bad_interrupt>
  72:	00 00       	nop
  74:	56 c0       	rjmp	.+172    	; 0x122 <__bad_interrupt>
  76:	00 00       	nop
  78:	54 c0       	rjmp	.+168    	; 0x122 <__bad_interrupt>
  7a:	00 00       	nop
  7c:	52 c0       	rjmp	.+164    	; 0x122 <__bad_interrupt>
  7e:	00 00       	nop
  80:	50 c0       	rjmp	.+160    	; 0x122 <__bad_interrupt>
  82:	00 00       	nop
  84:	4e c0       	rjmp	.+156    	; 0x122 <__bad_interrupt>
  86:	00 00       	nop
  88:	4c c0       	rjmp	.+152    	; 0x122 <__bad_interrupt>
  8a:	00 00       	nop
  8c:	4a c0       	rjmp	.+148    	; 0x122 <__bad_interrupt>
  8e:	00 00       	nop
  90:	00 c4       	rjmp	.+2048   	; 0x892 <__vector_36>
  92:	00 00       	nop
  94:	46 c0       	rjmp	.+140    	; 0x122 <__bad_interrupt>
  96:	00 00       	nop
  98:	44 c0       	rjmp	.+136    	; 0x122 <__bad_interrupt>
  9a:	00 00       	nop
  9c:	42 c0       	rjmp	.+132    	; 0x122 <__bad_interrupt>
  9e:	00 00       	nop
  a0:	40 c0       	rjmp	.+128    	; 0x122 <__bad_interrupt>
  a2:	00 00       	nop
  a4:	3e c0       	rjmp	.+124    	; 0x122 <__bad_interrupt>
  a6:	00 00       	nop
  a8:	3c c0       	rjmp	.+120    	; 0x122 <__bad_interrupt>
  aa:	00 00       	nop
  ac:	3a c0       	rjmp	.+116    	; 0x122 <__bad_interrupt>
  ae:	00 00       	nop
  b0:	38 c0       	rjmp	.+112    	; 0x122 <__bad_interrupt>
  b2:	00 00       	nop
  b4:	36 c0       	rjmp	.+108    	; 0x122 <__bad_interrupt>
  b6:	00 00       	nop
  b8:	34 c0       	rjmp	.+104    	; 0x122 <__bad_interrupt>
  ba:	00 00       	nop
  bc:	32 c0       	rjmp	.+100    	; 0x122 <__bad_interrupt>
  be:	00 00       	nop
  c0:	30 c0       	rjmp	.+96     	; 0x122 <__bad_interrupt>
  c2:	00 00       	nop
  c4:	2e c0       	rjmp	.+92     	; 0x122 <__bad_interrupt>
  c6:	00 00       	nop
  c8:	2c c0       	rjmp	.+88     	; 0x122 <__bad_interrupt>
  ca:	00 00       	nop
  cc:	22 c4       	rjmp	.+2116   	; 0x912 <__vector_51>
  ce:	00 00       	nop
  d0:	28 c0       	rjmp	.+80     	; 0x122 <__bad_interrupt>
  d2:	00 00       	nop
  d4:	26 c0       	rjmp	.+76     	; 0x122 <__bad_interrupt>
  d6:	00 00       	nop
  d8:	5c c4       	rjmp	.+2232   	; 0x992 <__vector_54>
  da:	00 00       	nop
  dc:	22 c0       	rjmp	.+68     	; 0x122 <__bad_interrupt>
  de:	00 00       	nop
  e0:	20 c0       	rjmp	.+64     	; 0x122 <__bad_interrupt>
	...

000000e4 <__ctors_end>:
  e4:	11 24       	eor	r1, r1
  e6:	1f be       	out	0x3f, r1	; 63
  e8:	cf ef       	ldi	r28, 0xFF	; 255
  ea:	d1 e2       	ldi	r29, 0x21	; 33
  ec:	de bf       	out	0x3e, r29	; 62
  ee:	cd bf       	out	0x3d, r28	; 61
  f0:	00 e0       	ldi	r16, 0x00	; 0
  f2:	0c bf       	out	0x3c, r16	; 60

000000f4 <__do_copy_data>:
  f4:	12 e0       	ldi	r17, 0x02	; 2
  f6:	a0 e0       	ldi	r26, 0x00	; 0
  f8:	b2 e0       	ldi	r27, 0x02	; 2
  fa:	e0 eb       	ldi	r30, 0xB0	; 176
  fc:	fa e0       	ldi	r31, 0x0A	; 10
  fe:	00 e0       	ldi	r16, 0x00	; 0
 100:	0b bf       	out	0x3b, r16	; 59
 102:	02 c0       	rjmp	.+4      	; 0x108 <__do_copy_data+0x14>
 104:	07 90       	elpm	r0, Z+
 106:	0d 92       	st	X+, r0
 108:	a4 36       	cpi	r26, 0x64	; 100
 10a:	b1 07       	cpc	r27, r17
 10c:	d9 f7       	brne	.-10     	; 0x104 <__do_copy_data+0x10>

0000010e <__do_clear_bss>:
 10e:	24 e0       	ldi	r18, 0x04	; 4
 110:	a4 e6       	ldi	r26, 0x64	; 100
 112:	b2 e0       	ldi	r27, 0x02	; 2
 114:	01 c0       	rjmp	.+2      	; 0x118 <.do_clear_bss_start>

00000116 <.do_clear_bss_loop>:
 116:	1d 92       	st	X+, r1

00000118 <.do_clear_bss_start>:
 118:	ac 36       	cpi	r26, 0x6C	; 108
 11a:	b2 07       	cpc	r27, r18
 11c:	e1 f7       	brne	.-8      	; 0x116 <.do_clear_bss_loop>
 11e:	02 d0       	rcall	.+4      	; 0x124 <main>
 120:	c5 c4       	rjmp	.+2442   	; 0xaac <_exit>

00000122 <__bad_interrupt>:
 122:	6e cf       	rjmp	.-292    	; 0x0 <__vectors>

00000124 <main>:
#include <stdio.h>


int main(void)
{
	init_usart0(9600,_8N1);
 124:	61 e2       	ldi	r22, 0x21	; 33
 126:	73 e0       	ldi	r23, 0x03	; 3
 128:	80 e8       	ldi	r24, 0x80	; 128
 12a:	95 e2       	ldi	r25, 0x25	; 37
 12c:	46 d0       	rcall	.+140    	; 0x1ba <init_usart0>
	init_usart1(9600,_8N1);
 12e:	61 e2       	ldi	r22, 0x21	; 33
 130:	73 e0       	ldi	r23, 0x03	; 3
 132:	80 e8       	ldi	r24, 0x80	; 128
 134:	95 e2       	ldi	r25, 0x25	; 37
 136:	ef d0       	rcall	.+478    	; 0x316 <init_usart1>
	init_usart2(9600,_8N1);
 138:	61 e2       	ldi	r22, 0x21	; 33
 13a:	73 e0       	ldi	r23, 0x03	; 3
 13c:	80 e8       	ldi	r24, 0x80	; 128
 13e:	95 e2       	ldi	r25, 0x25	; 37
 140:	98 d1       	rcall	.+816    	; 0x472 <init_usart2>
	init_usart3(9600,_8N1);
 142:	61 e2       	ldi	r22, 0x21	; 33
 144:	73 e0       	ldi	r23, 0x03	; 3
 146:	80 e8       	ldi	r24, 0x80	; 128
 148:	95 e2       	ldi	r25, 0x25	; 37
	
	send_string_usart0((unsigned char*)"hello world from uart0\r\n");
 14a:	41 d2       	rcall	.+1154   	; 0x5ce <init_usart3>
 14c:	80 e0       	ldi	r24, 0x00	; 0
 14e:	92 e0       	ldi	r25, 0x02	; 2
	send_string_usart1((unsigned char*)"hello world from uart1\r\n");
 150:	0c d3       	rcall	.+1560   	; 0x76a <send_string_usart0>
 152:	89 e1       	ldi	r24, 0x19	; 25
 154:	92 e0       	ldi	r25, 0x02	; 2
	send_string_usart2((unsigned char*)"hello world from uart2\r\n");
 156:	1e d3       	rcall	.+1596   	; 0x794 <send_string_usart1>
 158:	82 e3       	ldi	r24, 0x32	; 50
 15a:	92 e0       	ldi	r25, 0x02	; 2
 15c:	30 d3       	rcall	.+1632   	; 0x7be <send_string_usart2>
	send_string_usart3((unsigned char*)"hello world from uart3\r\n");
 15e:	8b e4       	ldi	r24, 0x4B	; 75
 160:	92 e0       	ldi	r25, 0x02	; 2
 162:	42 d3       	rcall	.+1668   	; 0x7e8 <send_string_usart3>
	
	while (1)
	{
		if(RX0_msg_complete == TRUE)
 164:	80 91 eb 03 	lds	r24, 0x03EB	; 0x8003eb <RX0_msg_complete>
 168:	81 30       	cpi	r24, 0x01	; 1
 16a:	29 f4       	brne	.+10     	; 0x176 <main+0x52>
		{	
			send_string_usart0(msg_from_usart0);
 16c:	8c ee       	ldi	r24, 0xEC	; 236
 16e:	93 e0       	ldi	r25, 0x03	; 3
 170:	fc d2       	rcall	.+1528   	; 0x76a <send_string_usart0>
			RX0_msg_complete = FALSE;
 172:	10 92 eb 03 	sts	0x03EB, r1	; 0x8003eb <RX0_msg_complete>
		}
		if(RX1_msg_complete == TRUE)
 176:	80 91 66 03 	lds	r24, 0x0366	; 0x800366 <RX1_msg_complete>
 17a:	81 30       	cpi	r24, 0x01	; 1
 17c:	29 f4       	brne	.+10     	; 0x188 <main+0x64>
		{
			send_string_usart0(msg_from_usart1);
 17e:	88 e6       	ldi	r24, 0x68	; 104
 180:	93 e0       	ldi	r25, 0x03	; 3
 182:	f3 d2       	rcall	.+1510   	; 0x76a <send_string_usart0>
			RX1_msg_complete = FALSE;
 184:	10 92 66 03 	sts	0x0366, r1	; 0x800366 <RX1_msg_complete>
			
		}
		if(RX2_msg_complete == TRUE)
 188:	80 91 e8 03 	lds	r24, 0x03E8	; 0x8003e8 <RX2_msg_complete>
 18c:	81 30       	cpi	r24, 0x01	; 1
 18e:	29 f4       	brne	.+10     	; 0x19a <main+0x76>
		{
			send_string_usart0(msg_from_usart2);
 190:	86 ee       	ldi	r24, 0xE6	; 230
 192:	92 e0       	ldi	r25, 0x02	; 2
 194:	ea d2       	rcall	.+1492   	; 0x76a <send_string_usart0>
			RX2_msg_complete = FALSE;
 196:	10 92 e8 03 	sts	0x03E8, r1	; 0x8003e8 <RX2_msg_complete>
			
		}
		if(RX3_msg_complete == TRUE)
 19a:	80 91 ea 03 	lds	r24, 0x03EA	; 0x8003ea <RX3_msg_complete>
 19e:	81 30       	cpi	r24, 0x01	; 1
 1a0:	29 f4       	brne	.+10     	; 0x1ac <main+0x88>
		{
			send_string_usart0(msg_from_usart3);
 1a2:	85 e6       	ldi	r24, 0x65	; 101
 1a4:	92 e0       	ldi	r25, 0x02	; 2
 1a6:	e1 d2       	rcall	.+1474   	; 0x76a <send_string_usart0>
 1a8:	10 92 ea 03 	sts	0x03EA, r1	; 0x8003ea <RX3_msg_complete>
			RX3_msg_complete = FALSE;
 1ac:	8f e3       	ldi	r24, 0x3F	; 63
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 1ae:	9c e9       	ldi	r25, 0x9C	; 156
 1b0:	01 97       	sbiw	r24, 0x01	; 1
 1b2:	f1 f7       	brne	.-4      	; 0x1b0 <main+0x8c>
 1b4:	00 c0       	rjmp	.+0      	; 0x1b6 <main+0x92>
 1b6:	00 00       	nop
 1b8:	d5 cf       	rjmp	.-86     	; 0x164 <main+0x40>

000001ba <init_usart0>:
 1ba:	ef 92       	push	r14
	return UDR2;
}
unsigned char read_char_usart3(){
	while (!(UCSR3A & (1<<RXC3)));
	return UDR3;
}
 1bc:	ff 92       	push	r15
 1be:	0f 93       	push	r16
 1c0:	1f 93       	push	r17
 1c2:	cf 93       	push	r28
 1c4:	df 93       	push	r29
 1c6:	7b 01       	movw	r14, r22
 1c8:	9c 01       	movw	r18, r24
 1ca:	40 e0       	ldi	r20, 0x00	; 0
 1cc:	50 e0       	ldi	r21, 0x00	; 0
 1ce:	60 e4       	ldi	r22, 0x40	; 64
 1d0:	72 e4       	ldi	r23, 0x42	; 66
 1d2:	8f e0       	ldi	r24, 0x0F	; 15
 1d4:	90 e0       	ldi	r25, 0x00	; 0
 1d6:	1d d4       	rcall	.+2106   	; 0xa12 <__divmodsi4>
 1d8:	e9 01       	movw	r28, r18
 1da:	21 97       	sbiw	r28, 0x01	; 1
 1dc:	87 01       	movw	r16, r14
 1de:	16 95       	lsr	r17
 1e0:	07 95       	ror	r16
 1e2:	16 95       	lsr	r17
 1e4:	07 95       	ror	r16
 1e6:	98 01       	movw	r18, r16
 1e8:	ab e7       	ldi	r26, 0x7B	; 123
 1ea:	b4 e1       	ldi	r27, 0x14	; 20
 1ec:	2e d4       	rcall	.+2140   	; 0xa4a <__umulhisi3>
 1ee:	ac 01       	movw	r20, r24
 1f0:	56 95       	lsr	r21
 1f2:	47 95       	ror	r20
 1f4:	24 e6       	ldi	r18, 0x64	; 100
 1f6:	24 9f       	mul	r18, r20
 1f8:	c0 01       	movw	r24, r0
 1fa:	25 9f       	mul	r18, r21
 1fc:	90 0d       	add	r25, r0
 1fe:	11 24       	eor	r1, r1
 200:	a7 01       	movw	r20, r14
 202:	48 1b       	sub	r20, r24
 204:	59 0b       	sbc	r21, r25
 206:	9a 01       	movw	r18, r20
 208:	ad ec       	ldi	r26, 0xCD	; 205
 20a:	bc ec       	ldi	r27, 0xCC	; 204
 20c:	1e d4       	rcall	.+2108   	; 0xa4a <__umulhisi3>
 20e:	fc 01       	movw	r30, r24
 210:	f6 95       	lsr	r31
 212:	e7 95       	ror	r30
 214:	f6 95       	lsr	r31
 216:	e7 95       	ror	r30
 218:	f6 95       	lsr	r31
 21a:	e7 95       	ror	r30
 21c:	9f 01       	movw	r18, r30
 21e:	22 0f       	add	r18, r18
 220:	33 1f       	adc	r19, r19
 222:	cf 01       	movw	r24, r30
 224:	88 0f       	add	r24, r24
 226:	99 1f       	adc	r25, r25
 228:	88 0f       	add	r24, r24
 22a:	99 1f       	adc	r25, r25
 22c:	88 0f       	add	r24, r24
 22e:	99 1f       	adc	r25, r25
 230:	82 0f       	add	r24, r18
 232:	93 1f       	adc	r25, r19
 234:	48 1b       	sub	r20, r24
 236:	59 0b       	sbc	r21, r25
 238:	d0 93 c5 00 	sts	0x00C5, r29	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7c00c5>
 23c:	c0 93 c4 00 	sts	0x00C4, r28	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7c00c4>
 240:	10 92 c0 00 	sts	0x00C0, r1	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7c00c0>
 244:	88 e9       	ldi	r24, 0x98	; 152
 246:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7c00c1>
 24a:	10 92 c2 00 	sts	0x00C2, r1	; 0x8000c2 <__TEXT_REGION_LENGTH__+0x7c00c2>
 24e:	98 01       	movw	r18, r16
 250:	ab e7       	ldi	r26, 0x7B	; 123
 252:	b4 e1       	ldi	r27, 0x14	; 20
 254:	fa d3       	rcall	.+2036   	; 0xa4a <__umulhisi3>
 256:	96 95       	lsr	r25
 258:	87 95       	ror	r24
 25a:	99 27       	eor	r25, r25
 25c:	86 30       	cpi	r24, 0x06	; 6
 25e:	91 05       	cpc	r25, r1
 260:	81 f0       	breq	.+32     	; 0x282 <init_usart0+0xc8>
 262:	18 f4       	brcc	.+6      	; 0x26a <init_usart0+0xb0>
 264:	05 97       	sbiw	r24, 0x05	; 5
 266:	39 f0       	breq	.+14     	; 0x276 <init_usart0+0xbc>
 268:	1d c0       	rjmp	.+58     	; 0x2a4 <init_usart0+0xea>
 26a:	87 30       	cpi	r24, 0x07	; 7
 26c:	91 05       	cpc	r25, r1
 26e:	79 f0       	breq	.+30     	; 0x28e <init_usart0+0xd4>
 270:	08 97       	sbiw	r24, 0x08	; 8
 272:	99 f0       	breq	.+38     	; 0x29a <init_usart0+0xe0>
 274:	17 c0       	rjmp	.+46     	; 0x2a4 <init_usart0+0xea>
 276:	a2 ec       	ldi	r26, 0xC2	; 194
 278:	b0 e0       	ldi	r27, 0x00	; 0
 27a:	8c 91       	ld	r24, X
 27c:	89 7f       	andi	r24, 0xF9	; 249
 27e:	8c 93       	st	X, r24
 280:	11 c0       	rjmp	.+34     	; 0x2a4 <init_usart0+0xea>
 282:	a2 ec       	ldi	r26, 0xC2	; 194
 284:	b0 e0       	ldi	r27, 0x00	; 0
 286:	8c 91       	ld	r24, X
 288:	82 60       	ori	r24, 0x02	; 2
 28a:	8c 93       	st	X, r24
 28c:	0b c0       	rjmp	.+22     	; 0x2a4 <init_usart0+0xea>
 28e:	a2 ec       	ldi	r26, 0xC2	; 194
 290:	b0 e0       	ldi	r27, 0x00	; 0
 292:	8c 91       	ld	r24, X
 294:	84 60       	ori	r24, 0x04	; 4
 296:	8c 93       	st	X, r24
 298:	05 c0       	rjmp	.+10     	; 0x2a4 <init_usart0+0xea>
 29a:	a2 ec       	ldi	r26, 0xC2	; 194
 29c:	b0 e0       	ldi	r27, 0x00	; 0
 29e:	8c 91       	ld	r24, X
 2a0:	86 60       	ori	r24, 0x06	; 6
 2a2:	8c 93       	st	X, r24
 2a4:	cf 01       	movw	r24, r30
 2a6:	99 27       	eor	r25, r25
 2a8:	81 30       	cpi	r24, 0x01	; 1
 2aa:	91 05       	cpc	r25, r1
 2ac:	51 f0       	breq	.+20     	; 0x2c2 <init_usart0+0x108>
 2ae:	18 f0       	brcs	.+6      	; 0x2b6 <init_usart0+0xfc>
 2b0:	02 97       	sbiw	r24, 0x02	; 2
 2b2:	69 f0       	breq	.+26     	; 0x2ce <init_usart0+0x114>
 2b4:	11 c0       	rjmp	.+34     	; 0x2d8 <init_usart0+0x11e>
 2b6:	e2 ec       	ldi	r30, 0xC2	; 194
 2b8:	f0 e0       	ldi	r31, 0x00	; 0
 2ba:	80 81       	ld	r24, Z
 2bc:	8f 7c       	andi	r24, 0xCF	; 207
 2be:	80 83       	st	Z, r24
 2c0:	0b c0       	rjmp	.+22     	; 0x2d8 <init_usart0+0x11e>
 2c2:	e2 ec       	ldi	r30, 0xC2	; 194
 2c4:	f0 e0       	ldi	r31, 0x00	; 0
 2c6:	80 81       	ld	r24, Z
 2c8:	80 62       	ori	r24, 0x20	; 32
 2ca:	80 83       	st	Z, r24
 2cc:	05 c0       	rjmp	.+10     	; 0x2d8 <init_usart0+0x11e>
 2ce:	e2 ec       	ldi	r30, 0xC2	; 194
 2d0:	f0 e0       	ldi	r31, 0x00	; 0
 2d2:	80 81       	ld	r24, Z
 2d4:	80 66       	ori	r24, 0x60	; 96
 2d6:	80 83       	st	Z, r24
 2d8:	55 27       	eor	r21, r21
 2da:	41 30       	cpi	r20, 0x01	; 1
 2dc:	51 05       	cpc	r21, r1
 2de:	21 f0       	breq	.+8      	; 0x2e8 <init_usart0+0x12e>
 2e0:	42 30       	cpi	r20, 0x02	; 2
 2e2:	51 05       	cpc	r21, r1
 2e4:	39 f0       	breq	.+14     	; 0x2f4 <init_usart0+0x13a>
 2e6:	0b c0       	rjmp	.+22     	; 0x2fe <init_usart0+0x144>
 2e8:	e2 ec       	ldi	r30, 0xC2	; 194
 2ea:	f0 e0       	ldi	r31, 0x00	; 0
 2ec:	80 81       	ld	r24, Z
 2ee:	87 7f       	andi	r24, 0xF7	; 247
 2f0:	80 83       	st	Z, r24
 2f2:	05 c0       	rjmp	.+10     	; 0x2fe <init_usart0+0x144>
 2f4:	e2 ec       	ldi	r30, 0xC2	; 194
 2f6:	f0 e0       	ldi	r31, 0x00	; 0
 2f8:	80 81       	ld	r24, Z
 2fa:	88 60       	ori	r24, 0x08	; 8
 2fc:	80 83       	st	Z, r24
 2fe:	10 92 e5 02 	sts	0x02E5, r1	; 0x8002e5 <RX0_index>
 302:	10 92 eb 03 	sts	0x03EB, r1	; 0x8003eb <RX0_msg_complete>
 306:	78 94       	sei
 308:	df 91       	pop	r29
 30a:	cf 91       	pop	r28
 30c:	1f 91       	pop	r17
 30e:	0f 91       	pop	r16
 310:	ff 90       	pop	r15
 312:	ef 90       	pop	r14
 314:	08 95       	ret

00000316 <init_usart1>:
 316:	ef 92       	push	r14
 318:	ff 92       	push	r15
 31a:	0f 93       	push	r16
 31c:	1f 93       	push	r17
 31e:	cf 93       	push	r28
 320:	df 93       	push	r29
 322:	7b 01       	movw	r14, r22
 324:	9c 01       	movw	r18, r24
 326:	40 e0       	ldi	r20, 0x00	; 0
 328:	50 e0       	ldi	r21, 0x00	; 0
 32a:	60 e4       	ldi	r22, 0x40	; 64
 32c:	72 e4       	ldi	r23, 0x42	; 66
 32e:	8f e0       	ldi	r24, 0x0F	; 15
 330:	90 e0       	ldi	r25, 0x00	; 0
 332:	6f d3       	rcall	.+1758   	; 0xa12 <__divmodsi4>
 334:	e9 01       	movw	r28, r18
 336:	21 97       	sbiw	r28, 0x01	; 1
 338:	87 01       	movw	r16, r14
 33a:	16 95       	lsr	r17
 33c:	07 95       	ror	r16
 33e:	16 95       	lsr	r17
 340:	07 95       	ror	r16
 342:	98 01       	movw	r18, r16
 344:	ab e7       	ldi	r26, 0x7B	; 123
 346:	b4 e1       	ldi	r27, 0x14	; 20
 348:	80 d3       	rcall	.+1792   	; 0xa4a <__umulhisi3>
 34a:	ac 01       	movw	r20, r24
 34c:	56 95       	lsr	r21
 34e:	47 95       	ror	r20
 350:	24 e6       	ldi	r18, 0x64	; 100
 352:	24 9f       	mul	r18, r20
 354:	c0 01       	movw	r24, r0
 356:	25 9f       	mul	r18, r21
 358:	90 0d       	add	r25, r0
 35a:	11 24       	eor	r1, r1
 35c:	a7 01       	movw	r20, r14
 35e:	48 1b       	sub	r20, r24
 360:	59 0b       	sbc	r21, r25
 362:	9a 01       	movw	r18, r20
 364:	ad ec       	ldi	r26, 0xCD	; 205
 366:	bc ec       	ldi	r27, 0xCC	; 204
 368:	70 d3       	rcall	.+1760   	; 0xa4a <__umulhisi3>
 36a:	fc 01       	movw	r30, r24
 36c:	f6 95       	lsr	r31
 36e:	e7 95       	ror	r30
 370:	f6 95       	lsr	r31
 372:	e7 95       	ror	r30
 374:	f6 95       	lsr	r31
 376:	e7 95       	ror	r30
 378:	9f 01       	movw	r18, r30
 37a:	22 0f       	add	r18, r18
 37c:	33 1f       	adc	r19, r19
 37e:	cf 01       	movw	r24, r30
 380:	88 0f       	add	r24, r24
 382:	99 1f       	adc	r25, r25
 384:	88 0f       	add	r24, r24
 386:	99 1f       	adc	r25, r25
 388:	88 0f       	add	r24, r24
 38a:	99 1f       	adc	r25, r25
 38c:	82 0f       	add	r24, r18
 38e:	93 1f       	adc	r25, r19
 390:	48 1b       	sub	r20, r24
 392:	59 0b       	sbc	r21, r25
 394:	d0 93 cd 00 	sts	0x00CD, r29	; 0x8000cd <__TEXT_REGION_LENGTH__+0x7c00cd>
 398:	c0 93 cc 00 	sts	0x00CC, r28	; 0x8000cc <__TEXT_REGION_LENGTH__+0x7c00cc>
 39c:	10 92 c8 00 	sts	0x00C8, r1	; 0x8000c8 <__TEXT_REGION_LENGTH__+0x7c00c8>
 3a0:	88 e9       	ldi	r24, 0x98	; 152
 3a2:	80 93 c9 00 	sts	0x00C9, r24	; 0x8000c9 <__TEXT_REGION_LENGTH__+0x7c00c9>
 3a6:	10 92 ca 00 	sts	0x00CA, r1	; 0x8000ca <__TEXT_REGION_LENGTH__+0x7c00ca>
 3aa:	98 01       	movw	r18, r16
 3ac:	ab e7       	ldi	r26, 0x7B	; 123
 3ae:	b4 e1       	ldi	r27, 0x14	; 20
 3b0:	4c d3       	rcall	.+1688   	; 0xa4a <__umulhisi3>
 3b2:	96 95       	lsr	r25
 3b4:	87 95       	ror	r24
 3b6:	99 27       	eor	r25, r25
 3b8:	86 30       	cpi	r24, 0x06	; 6
 3ba:	91 05       	cpc	r25, r1
 3bc:	81 f0       	breq	.+32     	; 0x3de <init_usart1+0xc8>
 3be:	18 f4       	brcc	.+6      	; 0x3c6 <init_usart1+0xb0>
 3c0:	05 97       	sbiw	r24, 0x05	; 5
 3c2:	39 f0       	breq	.+14     	; 0x3d2 <init_usart1+0xbc>
 3c4:	1d c0       	rjmp	.+58     	; 0x400 <__LOCK_REGION_LENGTH__>
 3c6:	87 30       	cpi	r24, 0x07	; 7
 3c8:	91 05       	cpc	r25, r1
 3ca:	79 f0       	breq	.+30     	; 0x3ea <init_usart1+0xd4>
 3cc:	08 97       	sbiw	r24, 0x08	; 8
 3ce:	99 f0       	breq	.+38     	; 0x3f6 <init_usart1+0xe0>
 3d0:	17 c0       	rjmp	.+46     	; 0x400 <__LOCK_REGION_LENGTH__>
 3d2:	aa ec       	ldi	r26, 0xCA	; 202
 3d4:	b0 e0       	ldi	r27, 0x00	; 0
 3d6:	8c 91       	ld	r24, X
 3d8:	89 7f       	andi	r24, 0xF9	; 249
 3da:	8c 93       	st	X, r24
 3dc:	11 c0       	rjmp	.+34     	; 0x400 <__LOCK_REGION_LENGTH__>
 3de:	aa ec       	ldi	r26, 0xCA	; 202
 3e0:	b0 e0       	ldi	r27, 0x00	; 0
 3e2:	8c 91       	ld	r24, X
 3e4:	82 60       	ori	r24, 0x02	; 2
 3e6:	8c 93       	st	X, r24
 3e8:	0b c0       	rjmp	.+22     	; 0x400 <__LOCK_REGION_LENGTH__>
 3ea:	aa ec       	ldi	r26, 0xCA	; 202
 3ec:	b0 e0       	ldi	r27, 0x00	; 0
 3ee:	8c 91       	ld	r24, X
 3f0:	84 60       	ori	r24, 0x04	; 4
 3f2:	8c 93       	st	X, r24
 3f4:	05 c0       	rjmp	.+10     	; 0x400 <__LOCK_REGION_LENGTH__>
 3f6:	aa ec       	ldi	r26, 0xCA	; 202
 3f8:	b0 e0       	ldi	r27, 0x00	; 0
 3fa:	8c 91       	ld	r24, X
 3fc:	86 60       	ori	r24, 0x06	; 6
 3fe:	8c 93       	st	X, r24
 400:	cf 01       	movw	r24, r30
 402:	99 27       	eor	r25, r25
 404:	81 30       	cpi	r24, 0x01	; 1
 406:	91 05       	cpc	r25, r1
 408:	51 f0       	breq	.+20     	; 0x41e <__LOCK_REGION_LENGTH__+0x1e>
 40a:	18 f0       	brcs	.+6      	; 0x412 <__LOCK_REGION_LENGTH__+0x12>
 40c:	02 97       	sbiw	r24, 0x02	; 2
 40e:	69 f0       	breq	.+26     	; 0x42a <__LOCK_REGION_LENGTH__+0x2a>
 410:	11 c0       	rjmp	.+34     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 412:	ea ec       	ldi	r30, 0xCA	; 202
 414:	f0 e0       	ldi	r31, 0x00	; 0
 416:	80 81       	ld	r24, Z
 418:	8f 7c       	andi	r24, 0xCF	; 207
 41a:	80 83       	st	Z, r24
 41c:	0b c0       	rjmp	.+22     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 41e:	ea ec       	ldi	r30, 0xCA	; 202
 420:	f0 e0       	ldi	r31, 0x00	; 0
 422:	80 81       	ld	r24, Z
 424:	80 62       	ori	r24, 0x20	; 32
 426:	80 83       	st	Z, r24
 428:	05 c0       	rjmp	.+10     	; 0x434 <__LOCK_REGION_LENGTH__+0x34>
 42a:	ea ec       	ldi	r30, 0xCA	; 202
 42c:	f0 e0       	ldi	r31, 0x00	; 0
 42e:	80 81       	ld	r24, Z
 430:	80 66       	ori	r24, 0x60	; 96
 432:	80 83       	st	Z, r24
 434:	55 27       	eor	r21, r21
 436:	41 30       	cpi	r20, 0x01	; 1
 438:	51 05       	cpc	r21, r1
 43a:	21 f0       	breq	.+8      	; 0x444 <__LOCK_REGION_LENGTH__+0x44>
 43c:	42 30       	cpi	r20, 0x02	; 2
 43e:	51 05       	cpc	r21, r1
 440:	39 f0       	breq	.+14     	; 0x450 <__LOCK_REGION_LENGTH__+0x50>
 442:	0b c0       	rjmp	.+22     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 444:	ea ec       	ldi	r30, 0xCA	; 202
 446:	f0 e0       	ldi	r31, 0x00	; 0
 448:	80 81       	ld	r24, Z
 44a:	87 7f       	andi	r24, 0xF7	; 247
 44c:	80 83       	st	Z, r24
 44e:	05 c0       	rjmp	.+10     	; 0x45a <__LOCK_REGION_LENGTH__+0x5a>
 450:	ea ec       	ldi	r30, 0xCA	; 202
 452:	f0 e0       	ldi	r31, 0x00	; 0
 454:	80 81       	ld	r24, Z
 456:	88 60       	ori	r24, 0x08	; 8
 458:	80 83       	st	Z, r24
 45a:	10 92 64 02 	sts	0x0264, r1	; 0x800264 <__data_end>
 45e:	10 92 66 03 	sts	0x0366, r1	; 0x800366 <RX1_msg_complete>
 462:	78 94       	sei
 464:	df 91       	pop	r29
 466:	cf 91       	pop	r28
 468:	1f 91       	pop	r17
 46a:	0f 91       	pop	r16
 46c:	ff 90       	pop	r15
 46e:	ef 90       	pop	r14
 470:	08 95       	ret

00000472 <init_usart2>:
 472:	ef 92       	push	r14
 474:	ff 92       	push	r15
 476:	0f 93       	push	r16
 478:	1f 93       	push	r17
 47a:	cf 93       	push	r28
 47c:	df 93       	push	r29
 47e:	7b 01       	movw	r14, r22
 480:	9c 01       	movw	r18, r24
 482:	40 e0       	ldi	r20, 0x00	; 0
 484:	50 e0       	ldi	r21, 0x00	; 0
 486:	60 e4       	ldi	r22, 0x40	; 64
 488:	72 e4       	ldi	r23, 0x42	; 66
 48a:	8f e0       	ldi	r24, 0x0F	; 15
 48c:	90 e0       	ldi	r25, 0x00	; 0
 48e:	c1 d2       	rcall	.+1410   	; 0xa12 <__divmodsi4>
 490:	e9 01       	movw	r28, r18
 492:	21 97       	sbiw	r28, 0x01	; 1
 494:	87 01       	movw	r16, r14
 496:	16 95       	lsr	r17
 498:	07 95       	ror	r16
 49a:	16 95       	lsr	r17
 49c:	07 95       	ror	r16
 49e:	98 01       	movw	r18, r16
 4a0:	ab e7       	ldi	r26, 0x7B	; 123
 4a2:	b4 e1       	ldi	r27, 0x14	; 20
 4a4:	d2 d2       	rcall	.+1444   	; 0xa4a <__umulhisi3>
 4a6:	ac 01       	movw	r20, r24
 4a8:	56 95       	lsr	r21
 4aa:	47 95       	ror	r20
 4ac:	24 e6       	ldi	r18, 0x64	; 100
 4ae:	24 9f       	mul	r18, r20
 4b0:	c0 01       	movw	r24, r0
 4b2:	25 9f       	mul	r18, r21
 4b4:	90 0d       	add	r25, r0
 4b6:	11 24       	eor	r1, r1
 4b8:	a7 01       	movw	r20, r14
 4ba:	48 1b       	sub	r20, r24
 4bc:	59 0b       	sbc	r21, r25
 4be:	9a 01       	movw	r18, r20
 4c0:	ad ec       	ldi	r26, 0xCD	; 205
 4c2:	bc ec       	ldi	r27, 0xCC	; 204
 4c4:	c2 d2       	rcall	.+1412   	; 0xa4a <__umulhisi3>
 4c6:	fc 01       	movw	r30, r24
 4c8:	f6 95       	lsr	r31
 4ca:	e7 95       	ror	r30
 4cc:	f6 95       	lsr	r31
 4ce:	e7 95       	ror	r30
 4d0:	f6 95       	lsr	r31
 4d2:	e7 95       	ror	r30
 4d4:	9f 01       	movw	r18, r30
 4d6:	22 0f       	add	r18, r18
 4d8:	33 1f       	adc	r19, r19
 4da:	cf 01       	movw	r24, r30
 4dc:	88 0f       	add	r24, r24
 4de:	99 1f       	adc	r25, r25
 4e0:	88 0f       	add	r24, r24
 4e2:	99 1f       	adc	r25, r25
 4e4:	88 0f       	add	r24, r24
 4e6:	99 1f       	adc	r25, r25
 4e8:	82 0f       	add	r24, r18
 4ea:	93 1f       	adc	r25, r19
 4ec:	48 1b       	sub	r20, r24
 4ee:	59 0b       	sbc	r21, r25
 4f0:	d0 93 d5 00 	sts	0x00D5, r29	; 0x8000d5 <__TEXT_REGION_LENGTH__+0x7c00d5>
 4f4:	c0 93 d4 00 	sts	0x00D4, r28	; 0x8000d4 <__TEXT_REGION_LENGTH__+0x7c00d4>
 4f8:	10 92 d0 00 	sts	0x00D0, r1	; 0x8000d0 <__TEXT_REGION_LENGTH__+0x7c00d0>
 4fc:	88 e9       	ldi	r24, 0x98	; 152
 4fe:	80 93 d1 00 	sts	0x00D1, r24	; 0x8000d1 <__TEXT_REGION_LENGTH__+0x7c00d1>
 502:	10 92 d2 00 	sts	0x00D2, r1	; 0x8000d2 <__TEXT_REGION_LENGTH__+0x7c00d2>
 506:	98 01       	movw	r18, r16
 508:	ab e7       	ldi	r26, 0x7B	; 123
 50a:	b4 e1       	ldi	r27, 0x14	; 20
 50c:	9e d2       	rcall	.+1340   	; 0xa4a <__umulhisi3>
 50e:	96 95       	lsr	r25
 510:	87 95       	ror	r24
 512:	99 27       	eor	r25, r25
 514:	86 30       	cpi	r24, 0x06	; 6
 516:	91 05       	cpc	r25, r1
 518:	81 f0       	breq	.+32     	; 0x53a <init_usart2+0xc8>
 51a:	18 f4       	brcc	.+6      	; 0x522 <init_usart2+0xb0>
 51c:	05 97       	sbiw	r24, 0x05	; 5
 51e:	39 f0       	breq	.+14     	; 0x52e <init_usart2+0xbc>
 520:	1d c0       	rjmp	.+58     	; 0x55c <init_usart2+0xea>
 522:	87 30       	cpi	r24, 0x07	; 7
 524:	91 05       	cpc	r25, r1
 526:	79 f0       	breq	.+30     	; 0x546 <init_usart2+0xd4>
 528:	08 97       	sbiw	r24, 0x08	; 8
 52a:	99 f0       	breq	.+38     	; 0x552 <init_usart2+0xe0>
 52c:	17 c0       	rjmp	.+46     	; 0x55c <init_usart2+0xea>
 52e:	a2 ed       	ldi	r26, 0xD2	; 210
 530:	b0 e0       	ldi	r27, 0x00	; 0
 532:	8c 91       	ld	r24, X
 534:	89 7f       	andi	r24, 0xF9	; 249
 536:	8c 93       	st	X, r24
 538:	11 c0       	rjmp	.+34     	; 0x55c <init_usart2+0xea>
 53a:	a2 ed       	ldi	r26, 0xD2	; 210
 53c:	b0 e0       	ldi	r27, 0x00	; 0
 53e:	8c 91       	ld	r24, X
 540:	82 60       	ori	r24, 0x02	; 2
 542:	8c 93       	st	X, r24
 544:	0b c0       	rjmp	.+22     	; 0x55c <init_usart2+0xea>
 546:	a2 ed       	ldi	r26, 0xD2	; 210
 548:	b0 e0       	ldi	r27, 0x00	; 0
 54a:	8c 91       	ld	r24, X
 54c:	84 60       	ori	r24, 0x04	; 4
 54e:	8c 93       	st	X, r24
 550:	05 c0       	rjmp	.+10     	; 0x55c <init_usart2+0xea>
 552:	a2 ed       	ldi	r26, 0xD2	; 210
 554:	b0 e0       	ldi	r27, 0x00	; 0
 556:	8c 91       	ld	r24, X
 558:	86 60       	ori	r24, 0x06	; 6
 55a:	8c 93       	st	X, r24
 55c:	cf 01       	movw	r24, r30
 55e:	99 27       	eor	r25, r25
 560:	81 30       	cpi	r24, 0x01	; 1
 562:	91 05       	cpc	r25, r1
 564:	51 f0       	breq	.+20     	; 0x57a <init_usart2+0x108>
 566:	18 f0       	brcs	.+6      	; 0x56e <init_usart2+0xfc>
 568:	02 97       	sbiw	r24, 0x02	; 2
 56a:	69 f0       	breq	.+26     	; 0x586 <init_usart2+0x114>
 56c:	11 c0       	rjmp	.+34     	; 0x590 <init_usart2+0x11e>
 56e:	e2 ed       	ldi	r30, 0xD2	; 210
 570:	f0 e0       	ldi	r31, 0x00	; 0
 572:	80 81       	ld	r24, Z
 574:	8f 7c       	andi	r24, 0xCF	; 207
 576:	80 83       	st	Z, r24
 578:	0b c0       	rjmp	.+22     	; 0x590 <init_usart2+0x11e>
 57a:	e2 ed       	ldi	r30, 0xD2	; 210
 57c:	f0 e0       	ldi	r31, 0x00	; 0
 57e:	80 81       	ld	r24, Z
 580:	80 62       	ori	r24, 0x20	; 32
 582:	80 83       	st	Z, r24
 584:	05 c0       	rjmp	.+10     	; 0x590 <init_usart2+0x11e>
 586:	e2 ed       	ldi	r30, 0xD2	; 210
 588:	f0 e0       	ldi	r31, 0x00	; 0
 58a:	80 81       	ld	r24, Z
 58c:	80 66       	ori	r24, 0x60	; 96
 58e:	80 83       	st	Z, r24
 590:	55 27       	eor	r21, r21
 592:	41 30       	cpi	r20, 0x01	; 1
 594:	51 05       	cpc	r21, r1
 596:	21 f0       	breq	.+8      	; 0x5a0 <init_usart2+0x12e>
 598:	42 30       	cpi	r20, 0x02	; 2
 59a:	51 05       	cpc	r21, r1
 59c:	39 f0       	breq	.+14     	; 0x5ac <init_usart2+0x13a>
 59e:	0b c0       	rjmp	.+22     	; 0x5b6 <init_usart2+0x144>
 5a0:	e2 ed       	ldi	r30, 0xD2	; 210
 5a2:	f0 e0       	ldi	r31, 0x00	; 0
 5a4:	80 81       	ld	r24, Z
 5a6:	87 7f       	andi	r24, 0xF7	; 247
 5a8:	80 83       	st	Z, r24
 5aa:	05 c0       	rjmp	.+10     	; 0x5b6 <init_usart2+0x144>
 5ac:	e2 ed       	ldi	r30, 0xD2	; 210
 5ae:	f0 e0       	ldi	r31, 0x00	; 0
 5b0:	80 81       	ld	r24, Z
 5b2:	88 60       	ori	r24, 0x08	; 8
 5b4:	80 83       	st	Z, r24
 5b6:	10 92 e9 03 	sts	0x03E9, r1	; 0x8003e9 <RX2_index>
 5ba:	10 92 e8 03 	sts	0x03E8, r1	; 0x8003e8 <RX2_msg_complete>
 5be:	78 94       	sei
 5c0:	df 91       	pop	r29
 5c2:	cf 91       	pop	r28
 5c4:	1f 91       	pop	r17
 5c6:	0f 91       	pop	r16
 5c8:	ff 90       	pop	r15
 5ca:	ef 90       	pop	r14
 5cc:	08 95       	ret

000005ce <init_usart3>:
 5ce:	ef 92       	push	r14
 5d0:	ff 92       	push	r15
 5d2:	0f 93       	push	r16
 5d4:	1f 93       	push	r17
 5d6:	cf 93       	push	r28
 5d8:	df 93       	push	r29
 5da:	7b 01       	movw	r14, r22
 5dc:	9c 01       	movw	r18, r24
 5de:	40 e0       	ldi	r20, 0x00	; 0
 5e0:	50 e0       	ldi	r21, 0x00	; 0
 5e2:	60 e4       	ldi	r22, 0x40	; 64
 5e4:	72 e4       	ldi	r23, 0x42	; 66
 5e6:	8f e0       	ldi	r24, 0x0F	; 15
 5e8:	90 e0       	ldi	r25, 0x00	; 0
 5ea:	13 d2       	rcall	.+1062   	; 0xa12 <__divmodsi4>
 5ec:	e9 01       	movw	r28, r18
 5ee:	21 97       	sbiw	r28, 0x01	; 1
 5f0:	87 01       	movw	r16, r14
 5f2:	16 95       	lsr	r17
 5f4:	07 95       	ror	r16
 5f6:	16 95       	lsr	r17
 5f8:	07 95       	ror	r16
 5fa:	98 01       	movw	r18, r16
 5fc:	ab e7       	ldi	r26, 0x7B	; 123
 5fe:	b4 e1       	ldi	r27, 0x14	; 20
 600:	24 d2       	rcall	.+1096   	; 0xa4a <__umulhisi3>
 602:	ac 01       	movw	r20, r24
 604:	56 95       	lsr	r21
 606:	47 95       	ror	r20
 608:	24 e6       	ldi	r18, 0x64	; 100
 60a:	24 9f       	mul	r18, r20
 60c:	c0 01       	movw	r24, r0
 60e:	25 9f       	mul	r18, r21
 610:	90 0d       	add	r25, r0
 612:	11 24       	eor	r1, r1
 614:	a7 01       	movw	r20, r14
 616:	48 1b       	sub	r20, r24
 618:	59 0b       	sbc	r21, r25
 61a:	9a 01       	movw	r18, r20
 61c:	ad ec       	ldi	r26, 0xCD	; 205
 61e:	bc ec       	ldi	r27, 0xCC	; 204
 620:	14 d2       	rcall	.+1064   	; 0xa4a <__umulhisi3>
 622:	fc 01       	movw	r30, r24
 624:	f6 95       	lsr	r31
 626:	e7 95       	ror	r30
 628:	f6 95       	lsr	r31
 62a:	e7 95       	ror	r30
 62c:	f6 95       	lsr	r31
 62e:	e7 95       	ror	r30
 630:	9f 01       	movw	r18, r30
 632:	22 0f       	add	r18, r18
 634:	33 1f       	adc	r19, r19
 636:	cf 01       	movw	r24, r30
 638:	88 0f       	add	r24, r24
 63a:	99 1f       	adc	r25, r25
 63c:	88 0f       	add	r24, r24
 63e:	99 1f       	adc	r25, r25
 640:	88 0f       	add	r24, r24
 642:	99 1f       	adc	r25, r25
 644:	82 0f       	add	r24, r18
 646:	93 1f       	adc	r25, r19
 648:	48 1b       	sub	r20, r24
 64a:	59 0b       	sbc	r21, r25
 64c:	d0 93 35 01 	sts	0x0135, r29	; 0x800135 <__TEXT_REGION_LENGTH__+0x7c0135>
 650:	c0 93 34 01 	sts	0x0134, r28	; 0x800134 <__TEXT_REGION_LENGTH__+0x7c0134>
 654:	10 92 30 01 	sts	0x0130, r1	; 0x800130 <__TEXT_REGION_LENGTH__+0x7c0130>
 658:	88 e9       	ldi	r24, 0x98	; 152
 65a:	80 93 31 01 	sts	0x0131, r24	; 0x800131 <__TEXT_REGION_LENGTH__+0x7c0131>
 65e:	10 92 32 01 	sts	0x0132, r1	; 0x800132 <__TEXT_REGION_LENGTH__+0x7c0132>
 662:	98 01       	movw	r18, r16
 664:	ab e7       	ldi	r26, 0x7B	; 123
 666:	b4 e1       	ldi	r27, 0x14	; 20
 668:	f0 d1       	rcall	.+992    	; 0xa4a <__umulhisi3>
 66a:	96 95       	lsr	r25
 66c:	87 95       	ror	r24
 66e:	99 27       	eor	r25, r25
 670:	86 30       	cpi	r24, 0x06	; 6
 672:	91 05       	cpc	r25, r1
 674:	81 f0       	breq	.+32     	; 0x696 <init_usart3+0xc8>
 676:	18 f4       	brcc	.+6      	; 0x67e <init_usart3+0xb0>
 678:	05 97       	sbiw	r24, 0x05	; 5
 67a:	39 f0       	breq	.+14     	; 0x68a <init_usart3+0xbc>
 67c:	1d c0       	rjmp	.+58     	; 0x6b8 <init_usart3+0xea>
 67e:	87 30       	cpi	r24, 0x07	; 7
 680:	91 05       	cpc	r25, r1
 682:	79 f0       	breq	.+30     	; 0x6a2 <init_usart3+0xd4>
 684:	08 97       	sbiw	r24, 0x08	; 8
 686:	99 f0       	breq	.+38     	; 0x6ae <init_usart3+0xe0>
 688:	17 c0       	rjmp	.+46     	; 0x6b8 <init_usart3+0xea>
 68a:	a2 e3       	ldi	r26, 0x32	; 50
 68c:	b1 e0       	ldi	r27, 0x01	; 1
 68e:	8c 91       	ld	r24, X
 690:	89 7f       	andi	r24, 0xF9	; 249
 692:	8c 93       	st	X, r24
 694:	11 c0       	rjmp	.+34     	; 0x6b8 <init_usart3+0xea>
 696:	a2 e3       	ldi	r26, 0x32	; 50
 698:	b1 e0       	ldi	r27, 0x01	; 1
 69a:	8c 91       	ld	r24, X
 69c:	82 60       	ori	r24, 0x02	; 2
 69e:	8c 93       	st	X, r24
 6a0:	0b c0       	rjmp	.+22     	; 0x6b8 <init_usart3+0xea>
 6a2:	a2 e3       	ldi	r26, 0x32	; 50
 6a4:	b1 e0       	ldi	r27, 0x01	; 1
 6a6:	8c 91       	ld	r24, X
 6a8:	84 60       	ori	r24, 0x04	; 4
 6aa:	8c 93       	st	X, r24
 6ac:	05 c0       	rjmp	.+10     	; 0x6b8 <init_usart3+0xea>
 6ae:	a2 e3       	ldi	r26, 0x32	; 50
 6b0:	b1 e0       	ldi	r27, 0x01	; 1
 6b2:	8c 91       	ld	r24, X
 6b4:	86 60       	ori	r24, 0x06	; 6
 6b6:	8c 93       	st	X, r24
 6b8:	cf 01       	movw	r24, r30
 6ba:	99 27       	eor	r25, r25
 6bc:	81 30       	cpi	r24, 0x01	; 1
 6be:	91 05       	cpc	r25, r1
 6c0:	51 f0       	breq	.+20     	; 0x6d6 <init_usart3+0x108>
 6c2:	18 f0       	brcs	.+6      	; 0x6ca <init_usart3+0xfc>
 6c4:	02 97       	sbiw	r24, 0x02	; 2
 6c6:	69 f0       	breq	.+26     	; 0x6e2 <init_usart3+0x114>
 6c8:	11 c0       	rjmp	.+34     	; 0x6ec <init_usart3+0x11e>
 6ca:	e2 e3       	ldi	r30, 0x32	; 50
 6cc:	f1 e0       	ldi	r31, 0x01	; 1
 6ce:	80 81       	ld	r24, Z
 6d0:	8f 7c       	andi	r24, 0xCF	; 207
 6d2:	80 83       	st	Z, r24
 6d4:	0b c0       	rjmp	.+22     	; 0x6ec <init_usart3+0x11e>
 6d6:	e2 e3       	ldi	r30, 0x32	; 50
 6d8:	f1 e0       	ldi	r31, 0x01	; 1
 6da:	80 81       	ld	r24, Z
 6dc:	80 62       	ori	r24, 0x20	; 32
 6de:	80 83       	st	Z, r24
 6e0:	05 c0       	rjmp	.+10     	; 0x6ec <init_usart3+0x11e>
 6e2:	e2 e3       	ldi	r30, 0x32	; 50
 6e4:	f1 e0       	ldi	r31, 0x01	; 1
 6e6:	80 81       	ld	r24, Z
 6e8:	80 66       	ori	r24, 0x60	; 96
 6ea:	80 83       	st	Z, r24
 6ec:	55 27       	eor	r21, r21
 6ee:	41 30       	cpi	r20, 0x01	; 1
 6f0:	51 05       	cpc	r21, r1
 6f2:	21 f0       	breq	.+8      	; 0x6fc <init_usart3+0x12e>
 6f4:	42 30       	cpi	r20, 0x02	; 2
 6f6:	51 05       	cpc	r21, r1
 6f8:	39 f0       	breq	.+14     	; 0x708 <init_usart3+0x13a>
 6fa:	0b c0       	rjmp	.+22     	; 0x712 <init_usart3+0x144>
 6fc:	e2 e3       	ldi	r30, 0x32	; 50
 6fe:	f1 e0       	ldi	r31, 0x01	; 1
 700:	80 81       	ld	r24, Z
 702:	87 7f       	andi	r24, 0xF7	; 247
 704:	80 83       	st	Z, r24
 706:	05 c0       	rjmp	.+10     	; 0x712 <init_usart3+0x144>
 708:	e2 e3       	ldi	r30, 0x32	; 50
 70a:	f1 e0       	ldi	r31, 0x01	; 1
 70c:	80 81       	ld	r24, Z
 70e:	88 60       	ori	r24, 0x08	; 8
 710:	80 83       	st	Z, r24
 712:	10 92 67 03 	sts	0x0367, r1	; 0x800367 <RX3_index>
 716:	10 92 ea 03 	sts	0x03EA, r1	; 0x8003ea <RX3_msg_complete>
 71a:	78 94       	sei
 71c:	df 91       	pop	r29
 71e:	cf 91       	pop	r28
 720:	1f 91       	pop	r17
 722:	0f 91       	pop	r16
 724:	ff 90       	pop	r15
 726:	ef 90       	pop	r14
 728:	08 95       	ret

0000072a <write_char_usart0>:
 72a:	e0 ec       	ldi	r30, 0xC0	; 192
 72c:	f0 e0       	ldi	r31, 0x00	; 0
 72e:	90 81       	ld	r25, Z
 730:	95 ff       	sbrs	r25, 5
 732:	fd cf       	rjmp	.-6      	; 0x72e <write_char_usart0+0x4>
 734:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
 738:	08 95       	ret

0000073a <write_char_usart1>:
 73a:	e8 ec       	ldi	r30, 0xC8	; 200
 73c:	f0 e0       	ldi	r31, 0x00	; 0
 73e:	90 81       	ld	r25, Z
 740:	95 ff       	sbrs	r25, 5
 742:	fd cf       	rjmp	.-6      	; 0x73e <write_char_usart1+0x4>
 744:	80 93 ce 00 	sts	0x00CE, r24	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
 748:	08 95       	ret

0000074a <write_char_usart2>:
 74a:	e0 ed       	ldi	r30, 0xD0	; 208
 74c:	f0 e0       	ldi	r31, 0x00	; 0
 74e:	90 81       	ld	r25, Z
 750:	95 ff       	sbrs	r25, 5
 752:	fd cf       	rjmp	.-6      	; 0x74e <write_char_usart2+0x4>
 754:	80 93 d6 00 	sts	0x00D6, r24	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7c00d6>
 758:	08 95       	ret

0000075a <write_char_usart3>:
 75a:	e0 e3       	ldi	r30, 0x30	; 48
 75c:	f1 e0       	ldi	r31, 0x01	; 1
 75e:	90 81       	ld	r25, Z
 760:	95 ff       	sbrs	r25, 5
 762:	fd cf       	rjmp	.-6      	; 0x75e <write_char_usart3+0x4>
 764:	80 93 36 01 	sts	0x0136, r24	; 0x800136 <__TEXT_REGION_LENGTH__+0x7c0136>
 768:	08 95       	ret

0000076a <send_string_usart0>:
 76a:	0f 93       	push	r16
 76c:	1f 93       	push	r17
 76e:	cf 93       	push	r28
 770:	fc 01       	movw	r30, r24
 772:	80 81       	ld	r24, Z
 774:	88 23       	and	r24, r24
 776:	51 f0       	breq	.+20     	; 0x78c <send_string_usart0+0x22>
 778:	8f 01       	movw	r16, r30
 77a:	c0 e0       	ldi	r28, 0x00	; 0
 77c:	d6 df       	rcall	.-84     	; 0x72a <write_char_usart0>
 77e:	cf 5f       	subi	r28, 0xFF	; 255
 780:	f8 01       	movw	r30, r16
 782:	ec 0f       	add	r30, r28
 784:	f1 1d       	adc	r31, r1
 786:	80 81       	ld	r24, Z
 788:	81 11       	cpse	r24, r1
 78a:	f8 cf       	rjmp	.-16     	; 0x77c <send_string_usart0+0x12>
 78c:	cf 91       	pop	r28
 78e:	1f 91       	pop	r17
 790:	0f 91       	pop	r16
 792:	08 95       	ret

00000794 <send_string_usart1>:
 794:	0f 93       	push	r16
 796:	1f 93       	push	r17
 798:	cf 93       	push	r28
 79a:	fc 01       	movw	r30, r24
 79c:	80 81       	ld	r24, Z
 79e:	88 23       	and	r24, r24
 7a0:	51 f0       	breq	.+20     	; 0x7b6 <send_string_usart1+0x22>
 7a2:	8f 01       	movw	r16, r30
 7a4:	c0 e0       	ldi	r28, 0x00	; 0
 7a6:	c9 df       	rcall	.-110    	; 0x73a <write_char_usart1>
 7a8:	cf 5f       	subi	r28, 0xFF	; 255
 7aa:	f8 01       	movw	r30, r16
 7ac:	ec 0f       	add	r30, r28
 7ae:	f1 1d       	adc	r31, r1
 7b0:	80 81       	ld	r24, Z
 7b2:	81 11       	cpse	r24, r1
 7b4:	f8 cf       	rjmp	.-16     	; 0x7a6 <send_string_usart1+0x12>
 7b6:	cf 91       	pop	r28
 7b8:	1f 91       	pop	r17
 7ba:	0f 91       	pop	r16
 7bc:	08 95       	ret

000007be <send_string_usart2>:
 7be:	0f 93       	push	r16
 7c0:	1f 93       	push	r17
 7c2:	cf 93       	push	r28
 7c4:	fc 01       	movw	r30, r24
 7c6:	80 81       	ld	r24, Z
 7c8:	88 23       	and	r24, r24
 7ca:	51 f0       	breq	.+20     	; 0x7e0 <send_string_usart2+0x22>
 7cc:	8f 01       	movw	r16, r30
 7ce:	c0 e0       	ldi	r28, 0x00	; 0
 7d0:	bc df       	rcall	.-136    	; 0x74a <write_char_usart2>
 7d2:	cf 5f       	subi	r28, 0xFF	; 255
 7d4:	f8 01       	movw	r30, r16
 7d6:	ec 0f       	add	r30, r28
 7d8:	f1 1d       	adc	r31, r1
 7da:	80 81       	ld	r24, Z
 7dc:	81 11       	cpse	r24, r1
 7de:	f8 cf       	rjmp	.-16     	; 0x7d0 <send_string_usart2+0x12>
 7e0:	cf 91       	pop	r28
 7e2:	1f 91       	pop	r17
 7e4:	0f 91       	pop	r16
 7e6:	08 95       	ret

000007e8 <send_string_usart3>:
 7e8:	0f 93       	push	r16
 7ea:	1f 93       	push	r17
 7ec:	cf 93       	push	r28
 7ee:	fc 01       	movw	r30, r24
 7f0:	80 81       	ld	r24, Z
 7f2:	88 23       	and	r24, r24
 7f4:	51 f0       	breq	.+20     	; 0x80a <send_string_usart3+0x22>
 7f6:	8f 01       	movw	r16, r30
 7f8:	c0 e0       	ldi	r28, 0x00	; 0
 7fa:	af df       	rcall	.-162    	; 0x75a <write_char_usart3>
 7fc:	cf 5f       	subi	r28, 0xFF	; 255
 7fe:	f8 01       	movw	r30, r16
 800:	ec 0f       	add	r30, r28
 802:	f1 1d       	adc	r31, r1
 804:	80 81       	ld	r24, Z
 806:	81 11       	cpse	r24, r1
 808:	f8 cf       	rjmp	.-16     	; 0x7fa <send_string_usart3+0x12>
 80a:	cf 91       	pop	r28
 80c:	1f 91       	pop	r17
 80e:	0f 91       	pop	r16
 810:	08 95       	ret

00000812 <__vector_25>:


ISR(USART0_RX_vect)
{
 812:	1f 92       	push	r1
 814:	0f 92       	push	r0
 816:	0f b6       	in	r0, 0x3f	; 63
 818:	0f 92       	push	r0
 81a:	11 24       	eor	r1, r1
 81c:	0b b6       	in	r0, 0x3b	; 59
 81e:	0f 92       	push	r0
 820:	8f 93       	push	r24
 822:	9f 93       	push	r25
 824:	af 93       	push	r26
 826:	bf 93       	push	r27
 828:	ef 93       	push	r30
 82a:	ff 93       	push	r31
	if(RX0_index == 0) memset(msg_from_usart0, 0, RX_BUFFER);
 82c:	90 91 e5 02 	lds	r25, 0x02E5	; 0x8002e5 <RX0_index>
 830:	91 11       	cpse	r25, r1
 832:	07 c0       	rjmp	.+14     	; 0x842 <__vector_25+0x30>
 834:	80 e8       	ldi	r24, 0x80	; 128
 836:	ec ee       	ldi	r30, 0xEC	; 236
 838:	f3 e0       	ldi	r31, 0x03	; 3
 83a:	df 01       	movw	r26, r30
 83c:	1d 92       	st	X+, r1
 83e:	8a 95       	dec	r24
 840:	e9 f7       	brne	.-6      	; 0x83c <__vector_25+0x2a>
	unsigned char c;
	while (!(UCSR0A & (1<<RXC0)));
 842:	e0 ec       	ldi	r30, 0xC0	; 192
 844:	f0 e0       	ldi	r31, 0x00	; 0
 846:	80 81       	ld	r24, Z
 848:	88 23       	and	r24, r24
 84a:	ec f7       	brge	.-6      	; 0x846 <__vector_25+0x34>
	c = UDR0;
 84c:	80 91 c6 00 	lds	r24, 0x00C6	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7c00c6>
	msg_from_usart0[RX0_index] = c;
 850:	e9 2f       	mov	r30, r25
 852:	f0 e0       	ldi	r31, 0x00	; 0
 854:	e4 51       	subi	r30, 0x14	; 20
 856:	fc 4f       	sbci	r31, 0xFC	; 252
 858:	80 83       	st	Z, r24
	RX0_index++;
 85a:	9f 5f       	subi	r25, 0xFF	; 255
 85c:	90 93 e5 02 	sts	0x02E5, r25	; 0x8002e5 <RX0_index>
	if(c == 0x0a)
 860:	8a 30       	cpi	r24, 0x0A	; 10
 862:	51 f4       	brne	.+20     	; 0x878 <__vector_25+0x66>
	{
		msg_from_usart0[RX0_index+1] = 0;
 864:	e9 2f       	mov	r30, r25
 866:	f0 e0       	ldi	r31, 0x00	; 0
 868:	e4 51       	subi	r30, 0x14	; 20
 86a:	fc 4f       	sbci	r31, 0xFC	; 252
 86c:	11 82       	std	Z+1, r1	; 0x01
		RX0_msg_complete = TRUE;	
 86e:	81 e0       	ldi	r24, 0x01	; 1
 870:	80 93 eb 03 	sts	0x03EB, r24	; 0x8003eb <RX0_msg_complete>
		RX0_index=0;
 874:	10 92 e5 02 	sts	0x02E5, r1	; 0x8002e5 <RX0_index>
	}
}
 878:	ff 91       	pop	r31
 87a:	ef 91       	pop	r30
 87c:	bf 91       	pop	r27
 87e:	af 91       	pop	r26
 880:	9f 91       	pop	r25
 882:	8f 91       	pop	r24
 884:	0f 90       	pop	r0
 886:	0b be       	out	0x3b, r0	; 59
 888:	0f 90       	pop	r0
 88a:	0f be       	out	0x3f, r0	; 63
 88c:	0f 90       	pop	r0
 88e:	1f 90       	pop	r1
 890:	18 95       	reti

00000892 <__vector_36>:
ISR(USART1_RX_vect){
 892:	1f 92       	push	r1
 894:	0f 92       	push	r0
 896:	0f b6       	in	r0, 0x3f	; 63
 898:	0f 92       	push	r0
 89a:	11 24       	eor	r1, r1
 89c:	0b b6       	in	r0, 0x3b	; 59
 89e:	0f 92       	push	r0
 8a0:	8f 93       	push	r24
 8a2:	9f 93       	push	r25
 8a4:	af 93       	push	r26
 8a6:	bf 93       	push	r27
 8a8:	ef 93       	push	r30
 8aa:	ff 93       	push	r31
	if(RX1_index == 0) memset(msg_from_usart1, 0, RX_BUFFER);
 8ac:	90 91 64 02 	lds	r25, 0x0264	; 0x800264 <__data_end>
 8b0:	91 11       	cpse	r25, r1
 8b2:	07 c0       	rjmp	.+14     	; 0x8c2 <__vector_36+0x30>
 8b4:	80 e8       	ldi	r24, 0x80	; 128
 8b6:	e8 e6       	ldi	r30, 0x68	; 104
 8b8:	f3 e0       	ldi	r31, 0x03	; 3
 8ba:	df 01       	movw	r26, r30
 8bc:	1d 92       	st	X+, r1
 8be:	8a 95       	dec	r24
 8c0:	e9 f7       	brne	.-6      	; 0x8bc <__vector_36+0x2a>
	unsigned char c;
	while (!(UCSR1A & (1<<RXC1)));
 8c2:	e8 ec       	ldi	r30, 0xC8	; 200
 8c4:	f0 e0       	ldi	r31, 0x00	; 0
 8c6:	80 81       	ld	r24, Z
 8c8:	88 23       	and	r24, r24
 8ca:	ec f7       	brge	.-6      	; 0x8c6 <__vector_36+0x34>
	c = UDR1;
 8cc:	80 91 ce 00 	lds	r24, 0x00CE	; 0x8000ce <__TEXT_REGION_LENGTH__+0x7c00ce>
	msg_from_usart1[RX1_index] = c;
 8d0:	e9 2f       	mov	r30, r25
 8d2:	f0 e0       	ldi	r31, 0x00	; 0
 8d4:	e8 59       	subi	r30, 0x98	; 152
 8d6:	fc 4f       	sbci	r31, 0xFC	; 252
 8d8:	80 83       	st	Z, r24
	RX1_index++;
 8da:	9f 5f       	subi	r25, 0xFF	; 255
 8dc:	90 93 64 02 	sts	0x0264, r25	; 0x800264 <__data_end>
	if(c == 0x0a)
 8e0:	8a 30       	cpi	r24, 0x0A	; 10
 8e2:	51 f4       	brne	.+20     	; 0x8f8 <__vector_36+0x66>
	{
		msg_from_usart1[RX1_index+1] = 0;
 8e4:	e9 2f       	mov	r30, r25
 8e6:	f0 e0       	ldi	r31, 0x00	; 0
 8e8:	e8 59       	subi	r30, 0x98	; 152
 8ea:	fc 4f       	sbci	r31, 0xFC	; 252
 8ec:	11 82       	std	Z+1, r1	; 0x01
		RX1_msg_complete = TRUE;
 8ee:	81 e0       	ldi	r24, 0x01	; 1
 8f0:	80 93 66 03 	sts	0x0366, r24	; 0x800366 <RX1_msg_complete>
		RX1_index=0;
 8f4:	10 92 64 02 	sts	0x0264, r1	; 0x800264 <__data_end>
	}	
}
 8f8:	ff 91       	pop	r31
 8fa:	ef 91       	pop	r30
 8fc:	bf 91       	pop	r27
 8fe:	af 91       	pop	r26
 900:	9f 91       	pop	r25
 902:	8f 91       	pop	r24
 904:	0f 90       	pop	r0
 906:	0b be       	out	0x3b, r0	; 59
 908:	0f 90       	pop	r0
 90a:	0f be       	out	0x3f, r0	; 63
 90c:	0f 90       	pop	r0
 90e:	1f 90       	pop	r1
 910:	18 95       	reti

00000912 <__vector_51>:
ISR(USART2_RX_vect){
 912:	1f 92       	push	r1
 914:	0f 92       	push	r0
 916:	0f b6       	in	r0, 0x3f	; 63
 918:	0f 92       	push	r0
 91a:	11 24       	eor	r1, r1
 91c:	0b b6       	in	r0, 0x3b	; 59
 91e:	0f 92       	push	r0
 920:	8f 93       	push	r24
 922:	9f 93       	push	r25
 924:	af 93       	push	r26
 926:	bf 93       	push	r27
 928:	ef 93       	push	r30
 92a:	ff 93       	push	r31
	if(RX2_index == 0) memset(msg_from_usart2, 0, RX_BUFFER);
 92c:	90 91 e9 03 	lds	r25, 0x03E9	; 0x8003e9 <RX2_index>
 930:	91 11       	cpse	r25, r1
 932:	07 c0       	rjmp	.+14     	; 0x942 <__vector_51+0x30>
 934:	80 e8       	ldi	r24, 0x80	; 128
 936:	e6 ee       	ldi	r30, 0xE6	; 230
 938:	f2 e0       	ldi	r31, 0x02	; 2
 93a:	df 01       	movw	r26, r30
 93c:	1d 92       	st	X+, r1
 93e:	8a 95       	dec	r24
 940:	e9 f7       	brne	.-6      	; 0x93c <__vector_51+0x2a>
	unsigned char c;
	while (!(UCSR2A & (1<<RXC2)));
 942:	e0 ed       	ldi	r30, 0xD0	; 208
 944:	f0 e0       	ldi	r31, 0x00	; 0
 946:	80 81       	ld	r24, Z
 948:	88 23       	and	r24, r24
 94a:	ec f7       	brge	.-6      	; 0x946 <__vector_51+0x34>
	c = UDR2;
 94c:	80 91 d6 00 	lds	r24, 0x00D6	; 0x8000d6 <__TEXT_REGION_LENGTH__+0x7c00d6>
	msg_from_usart2[RX2_index] = c;
 950:	e9 2f       	mov	r30, r25
 952:	f0 e0       	ldi	r31, 0x00	; 0
 954:	ea 51       	subi	r30, 0x1A	; 26
 956:	fd 4f       	sbci	r31, 0xFD	; 253
 958:	80 83       	st	Z, r24
	RX2_index++;
 95a:	9f 5f       	subi	r25, 0xFF	; 255
 95c:	90 93 e9 03 	sts	0x03E9, r25	; 0x8003e9 <RX2_index>
	if(c == 0x0a)
 960:	8a 30       	cpi	r24, 0x0A	; 10
 962:	51 f4       	brne	.+20     	; 0x978 <__vector_51+0x66>
	{
		msg_from_usart2[RX2_index+1] = 0;
 964:	e9 2f       	mov	r30, r25
 966:	f0 e0       	ldi	r31, 0x00	; 0
 968:	ea 51       	subi	r30, 0x1A	; 26
 96a:	fd 4f       	sbci	r31, 0xFD	; 253
 96c:	11 82       	std	Z+1, r1	; 0x01
		RX2_msg_complete = TRUE;
 96e:	81 e0       	ldi	r24, 0x01	; 1
 970:	80 93 e8 03 	sts	0x03E8, r24	; 0x8003e8 <RX2_msg_complete>
		RX2_index=0;
 974:	10 92 e9 03 	sts	0x03E9, r1	; 0x8003e9 <RX2_index>
	}
}
 978:	ff 91       	pop	r31
 97a:	ef 91       	pop	r30
 97c:	bf 91       	pop	r27
 97e:	af 91       	pop	r26
 980:	9f 91       	pop	r25
 982:	8f 91       	pop	r24
 984:	0f 90       	pop	r0
 986:	0b be       	out	0x3b, r0	; 59
 988:	0f 90       	pop	r0
 98a:	0f be       	out	0x3f, r0	; 63
 98c:	0f 90       	pop	r0
 98e:	1f 90       	pop	r1
 990:	18 95       	reti

00000992 <__vector_54>:
ISR(USART3_RX_vect){
 992:	1f 92       	push	r1
 994:	0f 92       	push	r0
 996:	0f b6       	in	r0, 0x3f	; 63
 998:	0f 92       	push	r0
 99a:	11 24       	eor	r1, r1
 99c:	0b b6       	in	r0, 0x3b	; 59
 99e:	0f 92       	push	r0
 9a0:	8f 93       	push	r24
 9a2:	9f 93       	push	r25
 9a4:	af 93       	push	r26
 9a6:	bf 93       	push	r27
 9a8:	ef 93       	push	r30
 9aa:	ff 93       	push	r31
	if(RX3_index == 0) memset(msg_from_usart3, 0, RX_BUFFER);
 9ac:	90 91 67 03 	lds	r25, 0x0367	; 0x800367 <RX3_index>
 9b0:	91 11       	cpse	r25, r1
 9b2:	07 c0       	rjmp	.+14     	; 0x9c2 <__vector_54+0x30>
 9b4:	80 e8       	ldi	r24, 0x80	; 128
 9b6:	e5 e6       	ldi	r30, 0x65	; 101
 9b8:	f2 e0       	ldi	r31, 0x02	; 2
 9ba:	df 01       	movw	r26, r30
 9bc:	1d 92       	st	X+, r1
 9be:	8a 95       	dec	r24
 9c0:	e9 f7       	brne	.-6      	; 0x9bc <__vector_54+0x2a>
	unsigned char c;
	while (!(UCSR3A & (1<<RXC3)));
 9c2:	e0 e3       	ldi	r30, 0x30	; 48
 9c4:	f1 e0       	ldi	r31, 0x01	; 1
 9c6:	80 81       	ld	r24, Z
 9c8:	88 23       	and	r24, r24
 9ca:	ec f7       	brge	.-6      	; 0x9c6 <__vector_54+0x34>
	c = UDR3;
 9cc:	80 91 36 01 	lds	r24, 0x0136	; 0x800136 <__TEXT_REGION_LENGTH__+0x7c0136>
	msg_from_usart3[RX3_index] = c;
 9d0:	e9 2f       	mov	r30, r25
 9d2:	f0 e0       	ldi	r31, 0x00	; 0
 9d4:	eb 59       	subi	r30, 0x9B	; 155
 9d6:	fd 4f       	sbci	r31, 0xFD	; 253
 9d8:	80 83       	st	Z, r24
	RX3_index++;
 9da:	9f 5f       	subi	r25, 0xFF	; 255
 9dc:	90 93 67 03 	sts	0x0367, r25	; 0x800367 <RX3_index>
	if(c == 0x0a)
 9e0:	8a 30       	cpi	r24, 0x0A	; 10
 9e2:	51 f4       	brne	.+20     	; 0x9f8 <__vector_54+0x66>
	{
		msg_from_usart3[RX3_index+1] = 0;
 9e4:	e9 2f       	mov	r30, r25
 9e6:	f0 e0       	ldi	r31, 0x00	; 0
 9e8:	eb 59       	subi	r30, 0x9B	; 155
 9ea:	fd 4f       	sbci	r31, 0xFD	; 253
 9ec:	11 82       	std	Z+1, r1	; 0x01
		RX3_msg_complete = TRUE;
 9ee:	81 e0       	ldi	r24, 0x01	; 1
 9f0:	80 93 ea 03 	sts	0x03EA, r24	; 0x8003ea <RX3_msg_complete>
		RX3_index=0;
 9f4:	10 92 67 03 	sts	0x0367, r1	; 0x800367 <RX3_index>
	}
 9f8:	ff 91       	pop	r31
 9fa:	ef 91       	pop	r30
 9fc:	bf 91       	pop	r27
 9fe:	af 91       	pop	r26
 a00:	9f 91       	pop	r25
 a02:	8f 91       	pop	r24
 a04:	0f 90       	pop	r0
 a06:	0b be       	out	0x3b, r0	; 59
 a08:	0f 90       	pop	r0
 a0a:	0f be       	out	0x3f, r0	; 63
 a0c:	0f 90       	pop	r0
 a0e:	1f 90       	pop	r1
 a10:	18 95       	reti

00000a12 <__divmodsi4>:
 a12:	05 2e       	mov	r0, r21
 a14:	97 fb       	bst	r25, 7
 a16:	16 f4       	brtc	.+4      	; 0xa1c <__divmodsi4+0xa>
 a18:	00 94       	com	r0
 a1a:	0f d0       	rcall	.+30     	; 0xa3a <__negsi2>
 a1c:	57 fd       	sbrc	r21, 7
 a1e:	05 d0       	rcall	.+10     	; 0xa2a <__divmodsi4_neg2>
 a20:	23 d0       	rcall	.+70     	; 0xa68 <__udivmodsi4>
 a22:	07 fc       	sbrc	r0, 7
 a24:	02 d0       	rcall	.+4      	; 0xa2a <__divmodsi4_neg2>
 a26:	46 f4       	brtc	.+16     	; 0xa38 <__divmodsi4_exit>
 a28:	08 c0       	rjmp	.+16     	; 0xa3a <__negsi2>

00000a2a <__divmodsi4_neg2>:
 a2a:	50 95       	com	r21
 a2c:	40 95       	com	r20
 a2e:	30 95       	com	r19
 a30:	21 95       	neg	r18
 a32:	3f 4f       	sbci	r19, 0xFF	; 255
 a34:	4f 4f       	sbci	r20, 0xFF	; 255
 a36:	5f 4f       	sbci	r21, 0xFF	; 255

00000a38 <__divmodsi4_exit>:
 a38:	08 95       	ret

00000a3a <__negsi2>:
 a3a:	90 95       	com	r25
 a3c:	80 95       	com	r24
 a3e:	70 95       	com	r23
 a40:	61 95       	neg	r22
 a42:	7f 4f       	sbci	r23, 0xFF	; 255
 a44:	8f 4f       	sbci	r24, 0xFF	; 255
 a46:	9f 4f       	sbci	r25, 0xFF	; 255
 a48:	08 95       	ret

00000a4a <__umulhisi3>:
 a4a:	a2 9f       	mul	r26, r18
 a4c:	b0 01       	movw	r22, r0
 a4e:	b3 9f       	mul	r27, r19
 a50:	c0 01       	movw	r24, r0
 a52:	a3 9f       	mul	r26, r19
 a54:	70 0d       	add	r23, r0
 a56:	81 1d       	adc	r24, r1
 a58:	11 24       	eor	r1, r1
 a5a:	91 1d       	adc	r25, r1
 a5c:	b2 9f       	mul	r27, r18
 a5e:	70 0d       	add	r23, r0
 a60:	81 1d       	adc	r24, r1
 a62:	11 24       	eor	r1, r1
 a64:	91 1d       	adc	r25, r1
 a66:	08 95       	ret

00000a68 <__udivmodsi4>:
 a68:	a1 e2       	ldi	r26, 0x21	; 33
 a6a:	1a 2e       	mov	r1, r26
 a6c:	aa 1b       	sub	r26, r26
 a6e:	bb 1b       	sub	r27, r27
 a70:	fd 01       	movw	r30, r26
 a72:	0d c0       	rjmp	.+26     	; 0xa8e <__udivmodsi4_ep>

00000a74 <__udivmodsi4_loop>:
 a74:	aa 1f       	adc	r26, r26
 a76:	bb 1f       	adc	r27, r27
 a78:	ee 1f       	adc	r30, r30
 a7a:	ff 1f       	adc	r31, r31
 a7c:	a2 17       	cp	r26, r18
 a7e:	b3 07       	cpc	r27, r19
 a80:	e4 07       	cpc	r30, r20
 a82:	f5 07       	cpc	r31, r21
 a84:	20 f0       	brcs	.+8      	; 0xa8e <__udivmodsi4_ep>
 a86:	a2 1b       	sub	r26, r18
 a88:	b3 0b       	sbc	r27, r19
 a8a:	e4 0b       	sbc	r30, r20
 a8c:	f5 0b       	sbc	r31, r21

00000a8e <__udivmodsi4_ep>:
 a8e:	66 1f       	adc	r22, r22
 a90:	77 1f       	adc	r23, r23
 a92:	88 1f       	adc	r24, r24
 a94:	99 1f       	adc	r25, r25
 a96:	1a 94       	dec	r1
 a98:	69 f7       	brne	.-38     	; 0xa74 <__udivmodsi4_loop>
 a9a:	60 95       	com	r22
 a9c:	70 95       	com	r23
 a9e:	80 95       	com	r24
 aa0:	90 95       	com	r25
 aa2:	9b 01       	movw	r18, r22
 aa4:	ac 01       	movw	r20, r24
 aa6:	bd 01       	movw	r22, r26
 aa8:	cf 01       	movw	r24, r30
 aaa:	08 95       	ret

00000aac <_exit>:
 aac:	f8 94       	cli

00000aae <__stop_program>:
 aae:	ff cf       	rjmp	.-2      	; 0xaae <__stop_program>
